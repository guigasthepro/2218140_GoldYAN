@page "/vclientes"
@using GoldYAN.Controller
@using GoldYAN.Data
@inject ClientesController VC
@attribute [Authorize]

@if (showModal)
{
    <div class="modal fade show" id="myModal" style="display:block ;background-color:rgba(128, 128, 128, 0.5);" aria-modal="true" role="dialog">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Lançar Localização</h4>
                    <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">

                            <EditForm class="form-group" Model="@EClientes" OnValidSubmit="Editar">
                                <DataAnnotationsValidator />
                                <div class="form-group form-inline m-2 p-1">
                                    <label class="" for="nome">Nome:</label> &nbsp;
                                    <InputText autocomplete="false" class="w-25 form-control" oninput="this.value = this.value.toUpperCase()" placeholder="Nome do cliente" id="nome" @bind-Value="EClientes.Nome" />
                                </div>
                                <ValidationMessage class="alert alert-warning" style="color:red !important" For="@(() => EClientes.Nome)" />

                                <div class="form-group form-inline m-2 p-1">
                                    <label for="telefone">Telefone:</label> &nbsp;
                                    <InputText autocomplete="false" class="w-25 form-control" oninput="this.value = this.value.toUpperCase()" id="telefone" placeholder="Telefone do cliente" @bind-Value="EClientes.Telefone" />
                                </div>
                                <ValidationMessage class="alert alert-warning" style="color:red !important" For="@(() => EClientes.Telefone)" />

                                <div class="form-group form-inline m-2 p-1">
                                    <label for="email">Email:</label> &nbsp;
                                    <InputText autocomplete="false" class="w-25 form-control" oninput="this.value = this.value.toUpperCase()" id="email" placeholder="Email do cliente" @bind-Value="EClientes.Email" />
                                </div>
                                <ValidationMessage class="alert alert-warning" style="color:red !important" For="@(() => EClientes.Email)" />

                                <div class="form-group form-inline m-2 p-1">
                                    <label for="morada">Localidade:</label> &nbsp;
                                    <InputText autocomplete="false" class="w-25 form-control" oninput="this.value = this.value.toUpperCase()" id="morada" placeholder="Localidade do cliente" @bind-Value="EClientes.Localidade" />
                                </div>

                                <div class="form-group form-inline m-2 p-1">
                                    <label for="morada">Morada:</label> &nbsp;
                                    <InputText autocomplete="false" class="w-25 form-control" oninput="this.value = this.value.toUpperCase()" id="morada" placeholder="Morada do cliente" @bind-Value="EClientes.Morada" />
                                </div>
                                <ValidationMessage class="alert alert-warning" style="color:red !important" For="@(() => EClientes.Morada)" />

                                <div class="form-group form-inline m-2 p-1">
                                    <label for="moradaopcional">Morada Opcional:</label> &nbsp;
                                    <InputText autocomplete="false" class="w-25 form-control" oninput="this.value = this.value.toUpperCase()" id="moradaopcional" placeholder="Morada Opcional do cliente" @bind-Value="EClientes.Moradaopcional" />
                                </div>
                                <div class="form-group form-inline m-2 p-1">
                                    <label for="codigopostal">Codigo Postal:</label> &nbsp;
                                    <InputText autocomplete="false" class="w-25 form-control" oninput="this.value = this.value.toUpperCase()" id="codigopostal" placeholder="Codigo Postal do cliente" @bind-Value="EClientes.Codigopostal" />
                                </div>
                                <ValidationMessage class="alert alert-warning" style="color:red !important" For="@(() => EClientes.Codigopostal)" />

                                <div class="form-group form-inline m-2 p-1">
                                    <label for="nif">Nif:</label> &nbsp;
                                    <InputNumber autocomplete="false" class="w-25 form-control" id="nif" placeholder="Nif do cliente" @bind-Value="EClientes.Nif" />
                                </div>
                                <ValidationMessage class="alert alert-warning" style="color:red !important" For="@(() => EClientes.Nif)" />

                                <div class="form-group form-inline m-2 p-1">
                                    <label for="Profissao">Profissão</label> &nbsp;
                                    <InputText autocomplete="false" class="w-25  form-control" oninput="this.value = this.value.toUpperCase()" placeholder="Profissão do cliente" id="Profissao" @bind-Value="EClientes.Profissao" />
                                </div>
                                <ValidationMessage class="alert alert-warning" style="color:red !important" For="@(() => EClientes.Profissao)" />
                            </EditForm>

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="ModalCancel">Cancelar</button>
                    <button type="button" @onclick="Editar" class="btn btn-primary">Editar</button>
                </div>

            </div>
        </div>
    </div>}


<div class="container-fluid">

    <!-- Page Heading -->
    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Listagem de Clientes</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive-sm">
                <div id="dataTable_wrapper" class="dataTables_wrapper dt-bootstrap4">
                    <div class="row"><div class="col-sm-12 col-md-6"><div class="dataTables_length" id="dataTable_length"><label>Pesquisar Cliente:<input type="search" @bind="Filter" @bind:event="oninput" class="form-control form-control-sm" placeholder="" aria-controls="dataTable"></label></div></div></div><div class="row">
                        <div class="col-sm-12">
                            <table class="table table-bordered table-hover table-sm dataTable" id="dataTable" width="100%" cellspacing="0" role="grid" aria-describedby="dataTable_info" style="width: 100%;">
                                <thead>
                                    <tr role="row"><th class="sorting_asc" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" style="width: 20px;">Codigo</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Position: activate to sort column ascending" style="width: 60px;">Nome</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Office: activate to sort column ascending" style="width: 160px;">Telemovel</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Age: activate to sort column ascending" style="width: 20px;">Email</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Start date: activate to sort column ascending" style="width: 45px;">Localidade</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Start date: activate to sort column ascending" style="width: 90px;">Nif</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Start date: activate to sort column ascending" style="width: 90px;">Ações</th></tr>
                                </thead>
                                <tfoot>
                                    <tr><th rowspan="1" colspan="1">Codigo</th><th rowspan="1" colspan="1">Nome</th><th rowspan="1" colspan="1">Telemovel</th><th rowspan="1" colspan="1">Email</th><th rowspan="1" colspan="1">Localidade</th><th rowspan="1" colspan="1">Nif</th><th rowspan="1" colspan="1">Ações</th></tr>
                                </tfoot>
                                <tbody>
                                    @foreach (var cliente in VCS)
                                    {
                                        if (!IsVisible(cliente))
                                            continue;
                                    <tr style="height: 1em;">
                                        <td class="sorting_1" style=" overflow: hidden; white-space: nowrap; " title="@cliente.idcliente ">@cliente.idcliente</td>
                                        <td class="sorting_1" style=" overflow: hidden; white-space: nowrap; " title="@cliente.Nome ">@cliente.Nome</td>
                                        <td class="sorting_1" style=" overflow: hidden; white-space: nowrap; " title="@cliente.Telefone ">@cliente.Telefone</td>
                                        <td class="sorting_1" style=" overflow: hidden; white-space: nowrap; " title="@cliente.Email ">@cliente.Email</td>
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@cliente.Localidade">@cliente.Localidade</td>
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@cliente.Nif">@cliente.Nif</td>
                                        <td><button class="btn btn-primary btn-sm" @onclick="() => AbrirModal(cliente.idcliente)" style="margin-left: 1rem"><i class="fas fa-pen"></i></button><button @onclick="() => Apagar(cliente.idcliente)" class="btn btn-danger btn-sm" style="margin-left: 0.3rem"><i class="fas fa-trash"></i></button></td>
                                    </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>>
                </div>
            </div>
        </div>
    </div>
</div>
@code {


    List<Clientes> VCS = new List<Clientes>();

    Data.Clientes EClientes = new Clientes();
    public string Filter { get; set; }
    bool showModal = false;

    public string pesquisa { get; set; }

    protected override async Task OnInitializedAsync()
    {
        VCS = VC.Get();
        StateHasChanged();

    }

    public async Task Pesquisar(string valor)
    {
        VCS = VC.PesquisarClientes(valor);
    }

    public bool IsVisible(Clientes cliente)
    {
        if (string.IsNullOrEmpty(Filter))
            return true;

        if (cliente.Nome.Contains(Filter) || cliente.Email.ToString().Contains(Filter) || cliente.Telefone.ToString().Contains(Filter) || cliente.Nif.ToString().Contains(Filter))

            return true;

        return false;
    }

    public async Task Apagar(int id)
    {
        VC.Delete(id);
    }

    public async Task Editar()
    {
        VC.Put(EClientes.idcliente, EClientes);
        showModal = false;
        OnInitializedAsync();
    }

    public async Task ModalCancel()
    {
        showModal = false;
    }

    public async Task AbrirModal(int id)
    {
        EClientes = VC.Get(id);
        showModal = true;

    }

}
