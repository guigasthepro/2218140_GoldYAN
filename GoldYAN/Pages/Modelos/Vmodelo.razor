@page "/vmodelo"
@using GoldYAN.Controller
@using GoldYAN.Data
@using Microsoft.EntityFrameworkCore.Internal


@if (showModal)
{

<div class="modal fade show" id="myModal" style="display:block; position:fixed; overflow-y:auto;" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title">EDITAR MODELOS</h4>
                <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
            </div>

            <div class="container-fluid">
                <div class="card shadow mb-4">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Cabeçalho Modelo</h6>
                    </div>
                    <EditForm Model="@cm" OnValidSubmit="@AtualizarLista">
                        <div class="m-3 form-group">
                            <div class="form-inline">
                                <label for="Descricao">Referência do Modelo:</label> &nbsp
                                <InputText id="Descricao" class="form-control" placeholder="Ainda não selecionado" @bind-Value="cm.idmodelo" />
                            </div>
                        </div>

                        <div class="m-3 form-group">
                            <div class="form-inline">
                                <label for="Descricao">Descrição:</label> &nbsp
                                <InputText id="Descricao" class="form-control" placeholder="Ainda não selecionado" @bind-Value="cm.descricao" />
                            </div>
                        </div>
                    </EditForm>

                    <div class="m-3 form-group ">
                        <div class="form-inline">
                            <label for="nome" class="">Tipo de Produto:</label>
                            <BlazoredTypeahead class="col-sm-5" SearchMethod="ProcurarProdutos" oninput="this.value = this.value.toUpperCase()" @bind-Value="dtp" Placeholder="Pesquisar cliente">
                                <SelectedTemplate>
                                    @context.codigo (Desc: @context.descricao)
                                </SelectedTemplate>
                                <ResultTemplate>@context.codigo + @context.descricao </ResultTemplate>
                            </BlazoredTypeahead>
                        </div>
                    </div>

                    <div class="m-3 form-group ">
                        <div class="form-inline">
                            <label for="nome" class="">Tipo de Peça:</label>
                            <BlazoredTypeahead class="" SearchMethod="ProcurarPecas" oninput="this.value = this.value.toUpperCase()" @bind-Value="dtdp" Placeholder="Pesquisar cliente">
                                <SelectedTemplate>
                                    @context.codigo (Desc: @context.descricao)
                                </SelectedTemplate>
                                <ResultTemplate> @context.codigo + @context.descricao </ResultTemplate>
                            </BlazoredTypeahead>
                        </div>
                    </div>
                </div>
            </div>



            <div class="container-fluid">
                <div class="card shadow mb-4">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary" style="display:inline;">Formulário Modelos</h6>
                        @if (!String.IsNullOrEmpty(cm.idmodelo) && cm.idtipodepeca == 0 && cm.idtipoproduto == 0 && !String.IsNullOrEmpty(cm.descricao))
                        {
                            <h6 class="m-1 float-right text-danger" style="display: inline;">Preencha primeiro o cabeçalho do modelo!</h6>
                        }
                        else
                        {
                            Readonly = false;
                        }

                    </div>



                    <EditForm Model="m">
                        <div class="m-3 form-group col-sm-5">
                            <div class="form-inline">
                                <label for="Descricao">Componente:</label> &nbsp
                                <InputSelect @bind-Value="@m.formadepesquisa">
                                    <option selected>------</option>
                                    <option>Molde</option>
                                    <option>Serviço</option>
                                    <option>Produtos</option>
                                </InputSelect>
                            </div>
                        </div>
                    </EditForm>


                    @if (m.formadepesquisa == "Molde" || m.idmolde.HasValue)
                    {
                        <div class="m-3 form-group">
                            <div class="form-inline">
                                <label for="nome">Molde:</label>
                                <BlazoredTypeahead SearchMethod="ProcurarMoldes" DisableClear="true" EnableDropDown="true" Disabled="@Readonly" oninput="this.value = this.value.toUpperCase()" @bind-Value="mlds" Placeholder="Pesquisar Serviço">
                                    <SelectedTemplate>
                                        @context.descricao
                                    </SelectedTemplate>
                                    <ResultTemplate> @context.codigo + @context.descricao</ResultTemplate>
                                </BlazoredTypeahead>
                            </div>
                        </div>
                    }
                    else if (m.formadepesquisa == "Serviço" || m.idservico.HasValue)
                    {
                        <div class="m-3 form-group">
                            <div class="form-inline">
                                <label for="nome">Serviço:</label>
                                <BlazoredTypeahead SearchMethod="ProcurarServicos" DisableClear="true" EnableDropDown="true" Disabled="@Readonly" oninput="this.value = this.value.toUpperCase()" @bind-Value="servicos" Placeholder="Pesquisar Serviço">
                                    <SelectedTemplate>
                                        @context.descricao
                                    </SelectedTemplate>
                                    <ResultTemplate>@context.codigo + @context.descricao</ResultTemplate>
                                </BlazoredTypeahead>
                            </div>
                        </div>
                    }
                    else if (m.formadepesquisa == "Produtos" || m.idproduto.HasValue)
                    {
                        <div class="m-3 form-group">
                            <div class="form-inline">
                                <label for="nome">Produtos:</label>
                                <BlazoredTypeahead SearchMethod="ProcurarProdutos" DisableClear="true" EnableDropDown="true" Disabled="@Readonly" oninput="this.value = this.value.toUpperCase()" @bind-Value="produtos" Placeholder="Pesquisar Serviço">
                                    <SelectedTemplate>
                                        @context.codigo
                                    </SelectedTemplate>
                                    <ResultTemplate>@context.codigo + @context.descricao</ResultTemplate>
                                </BlazoredTypeahead>
                            </div>
                        </div>
                    }
                    else
                    {
                    }

                    <div class="m-3 form-group">
                        <div class="form-inline">
                            <label for="datadeentrega">Colaborador:</label> &nbsp
                            <BlazoredTypeahead SearchMethod="ProcurarColaboradores" DisableClear="true" EnableDropDown="true" Disabled="@Readonly" oninput="this.value = this.value.toUpperCase()" @bind-Value="cl" Placeholder="Pesquisar Colaborador">
                                <SelectedTemplate>
                                    @context.codigo : @context.descricao
                                </SelectedTemplate>
                                <ResultTemplate>@context.codigo : @context.descricao</ResultTemplate>
                            </BlazoredTypeahead>
                        </div>
                    </div>


                    <EditForm Model="@m" OnValidSubmit="@AtualizarLista">
                        <DataAnnotationsValidator />

                        @*<div class="m-3 form-group">
                                <div class="form-inline">
                                    <label for="telefone">Referência de Modelo:</label> &nbsp
                                    <InputText id="telefone" class="form-control" @bind-Value="" />
                                </div>
                            </div>*@


                        <div class="m-3 form-group">
                            <div class="form-inline">
                                <label for="Quantidade">Quantidade:</label> &nbsp
                                <InputNumber id="Quantidade" class="form-control" placeholder="Quantidade" disabled="@Readonly" @bind-Value="m.quantidade" />
                            </div>
                        </div>

                        <div class="m-3 form-group">
                            <div class="form-inline">
                                <label for="peso">Peso:</label> &nbsp
                                <InputNumber id="peso" class="form-control" placeholder="Peso" disabled="@Readonly" @bind-Value="m.peso" />
                            </div>
                        </div>

                        <div class="m-3 form-group">
                            <div class="form-inline">
                                <label for="preco">Preco:</label> &nbsp
                                <InputNumber id="preco" class="form-control" placeholder="Preço do serviço" disabled="@Readonly" @bind-Value="m.preco" />
                            </div>
                        </div>

                        <div class="m-3 form-group">
                            <div class="form-inline">
                                <label for="apontamentos">Valor Total:</label> &nbsp
                                <InputNumber id="apontamentos" class="form-control" placeholder="Apontamentos para o serviço" disabled="@Readonly" oninput="this.value = this.value.toUpperCase()" @bind-Value="m.valortotal" />
                            </div>
                        </div>



                        <div class="m-3 form-group">
                            <button type="submit" class="btn btn-primary">Alterar</button>
                        </div>
                    </EditForm>
                </div>
            </div>

            <div class="container-fluid">
                <div class="card shadow mb-4">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Sumário da Encomenda</h6>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive-sm">
                            <div id="dataTable_wrapper" class="dataTables_wrapper dt-bootstrap4">
                                <div class="row"><div class="col-sm-12 col-md-6"><div class="dataTables_length" id="dataTable_length"></div></div></div><div class="row">
                                    <div class="col-sm-12">
                                        <table class="table table-bordered table-hover table-sm dataTable" id="dataTable" width="100%" cellspacing="0" role="grid" aria-describedby="dataTable_info" style="width: 100%;">
                                            <thead>
                                                <tr role="row"><th class="sorting_asc" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Name: activate to sort column descending" style="width: 101px;">Componente</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Position: activate to sort column ascending" style="width: 170px;">Colaborador</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Age: activate to sort column ascending" style="width: 31px;">Classificação</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Salary: activate to sort column ascending" style="width: 67px;">Descrição</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Salary: activate to sort column ascending" style="width: 67px;">Qtd.</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Salary: activate to sort column ascending" style="width: 67px;">Peso</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Salary: activate to sort column ascending" style="width: 67px;">Valor.Uni.</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Salary: activate to sort column ascending" style="width: 67px;">Ações</th></tr>
                                            </thead>
                                            <tfoot>
                                                <tr><th rowspan="1" colspan="1">Componente</th><th rowspan="1" colspan="1">Colaborador</th><th rowspan="1" colspan="1">Classificação</th><th rowspan="1" colspan="1">Descrição</th><th rowspan="1" colspan="1">Qtd.</th><th rowspan="1" colspan="1">Peso</th><th rowspan="1" colspan="1">Valor.Un.</th><th rowspan="1" colspan="1">Ações</th></tr>
                                            </tfoot>
                                            <tbody>
                                                @foreach (var modelo in listaModelos)
                                                {
                                                    <tr style="height: 1em;">
                                                        @if (modelo.idmolde.HasValue)
                                                        {
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.idmolde">Molde</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.idcolaborador">@modelo.idcolaborador</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.idmolde">@modelo.idmolde</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.descricao">@modelo.descricao</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.quantidade">@modelo.quantidade</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.peso">@modelo.peso</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.preco">@modelo.preco</td>
                                                            <td><button class="btn btn-primary btn-sm" @onclick="() => LoadData(modelo.idmodelo, modelo.linha)" style="margin-left: 1rem">Editar</button><button class="btn btn-danger btn-sm" @onclick="() => listaModelos.RemoveAt(modelo.linha - 1)" style="margin-left: 0.3rem">Apagar</button></td>


                                                        }
                                                        else if (modelo.idservico.HasValue)
                                                        {
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.idservico">Serviço</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.idcolaborador">@modelo.idcolaborador</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.idservico">@modelo.idservico</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.descricao">@modelo.descricao</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.quantidade">@modelo.quantidade</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.peso">@modelo.peso</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.preco">@modelo.preco</td>
                                                            <td><button class="btn btn-primary btn-sm" @onclick="() => LoadData(modelo.idmodelo, modelo.linha)" style="margin-left: 1rem">Editar</button><button class="btn btn-danger btn-sm" @onclick="() => listaModelos.RemoveAt(modelo.linha - 1)" style="margin-left: 0.3rem">Apagar</button></td>

                                                        }
                                                        else
                                                        {
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.idproduto">Produto</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.idcolaborador">@modelo.idcolaborador</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.idproduto">@modelo.idproduto</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.descricao">@modelo.descricao</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.quantidade">@modelo.quantidade</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.peso">@modelo.peso</td>
                                                            <td style="overflow: hidden; white-space: nowrap;" title="@modelo.preco">@modelo.preco</td>
                                                            <td><button class="btn btn-primary btn-sm" @onclick="() => LoadData(modelo.idmodelo, modelo.linha)" style="margin-left: 1rem">Editar</button><button class="btn btn-danger btn-sm" @onclick="() => listaModelos.RemoveAt(modelo.linha - 1)" style="margin-left: 0.3rem">Apagar</button></td>

                                                        }

                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="button" @onclick="() => AtualizarLista()" class="btn btn-success">Salvar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


}


<div class="container-fluid">

    <!-- Page Heading -->
    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Listagem de Modelos</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive-sm">
                <div id="dataTable_wrapper" class="dataTables_wrapper dt-bootstrap4">
                    <div class="row"><div class="col-sm-12 col-md-6"><div class="dataTables_length" id="dataTable_length"><label>Show <select name="dataTable_length" aria-controls="dataTable" class="custom-select custom-select-sm form-control form-control-sm"><option value="10">10</option><option value="25">25</option><option value="50">50</option><option value="100">100</option></select> entries</label></div></div><div class="col-sm-12 col-md-6"><div id="dataTable_filter" class="dataTables_filter"><label>Pesquisar Modelo:<input type="search" @bind="Filter" @bind:event="oninput" class="form-control form-control-sm" placeholder="" aria-controls="dataTable"></label></div></div></div><div class="row">
                        <div class="col-sm-12">
                            <table class="table table-bordered table-hover table-sm dataTable" id="dataTable" width="100%" cellspacing="0" role="grid" aria-describedby="dataTable_info" style="width: 100%;">
                                <thead>
                                    <tr role="row"><th class="sorting_asc" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" style="width: 20px;">IDModelo</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Position: activate to sort column ascending" style="width: 60px;">IDTipoDePeça</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Office: activate to sort column ascending" style="width: 160px;">IDTipoDeProduto</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Age: activate to sort column ascending" style="width: 20px;">Descrição</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Start date: activate to sort column ascending" style="width: 45px;">Data Criação</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Start date: activate to sort column ascending" style="width: 45px;">Ações</th></tr>
                                </thead>
                                <tfoot>
                                    <tr><th rowspan="1" colspan="1">IDModelo</th><th rowspan="1" colspan="1">IDTipoDePeça</th><th rowspan="1" colspan="1">IDTipoDeProduto</th><th rowspan="1" colspan="1">Descrição</th><th rowspan="1" colspan="1">Data Criação</th><th rowspan="1" colspan="1">Ações</th></tr>
                                </tfoot>
                                <tbody>
                                    @foreach (var modelos in LCM)
                                    {
                                        if (!IsVisible(modelos))
                                            continue;
                                        <tr @ondblclick="() => OpenFichaModelo(modelos.idmodelo)" style="height: 1em;">
                                            <td class="sorting_1" style=" overflow: hidden; white-space: nowrap; " title="@modelos.idmodelo">@modelos.idmodelo</td>
                                            <td style=" overflow: hidden; white-space: nowrap; " title="@modelos.idtipodepeca">@modelos.idtipodepeca</td>
                                            <td style=" overflow: hidden; white-space: nowrap; " title="@modelos.idtipoproduto">@modelos.idtipoproduto</td>
                                            <td style=" overflow: hidden; white-space: nowrap; " title="@modelos.descricao">@modelos.descricao</td>
                                            <td style=" overflow: hidden; white-space: nowrap; " title="@modelos.datacriacao">@modelos.datacriacao</td>
                                            <td><button class="btn btn-primary btn-sm" @onclick="() => OpenFichaModelo(modelos.idmodelo)" style="margin-left: 1rem">Editar</button><button class="btn btn-danger btn-sm" @onclick="() => Apagar(modelos.idmodelo)" style="margin-left: 0.3rem">Apagar</button></td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@code {


    // Invoking classes
    Data.Servicos servicos = new Servicos();
    Data.Moldes mlds = new Moldes();
    Data.Produtos produtos = new Produtos();
    Data.CabecalhosModelos cm = new CabecalhosModelos();
    Data.Modelos m = new Modelos();
    Data.Colaboradores cl = new Colaboradores();
    Data.TipoDePeca dtdp = new TipoDePeca();
    Data.TipoProduto dtp = new TipoProduto();



    //Invoking lists
    List<Servicos> ListaServicos = new List<Servicos>();
    List<Produtos> listaProdutos = new List<Produtos>();
    List<Moldes> listaMoldes = new List<Moldes>();
    List<TipoDePeca> listaTipoDePecas = new List<TipoDePeca>();
    List<TipoProduto> listaTipoProdutos = new List<TipoProduto>();
    List<Modelos> listaModelos = new List<Modelos>();
    List<Colaboradores> colaboradores = new List<Colaboradores>();
    List<Modelos> mo = new List<Modelos>();

    bool FichaModelo = false;

    bool showModal = false;
    bool showModal2 = false;
    bool Readonly = true;
    bool ReadonlyCabecalho = true;
    int i;
    string formadepesquisa;


    Data.CabecalhosModelos updateCm = new CabecalhosModelos();
    Data.Modelos updateM = new Modelos();

    List<CabecalhosModelos> LCM = new List<CabecalhosModelos>();
    List<Modelos> LM = new List<Modelos>();

    public string Filter { get; set; }

    protected override async Task OnInitializedAsync()
    {
        LCM = CMC.GetAll();


        colaboradores = colaboradoresController.GetAll();
        listaMoldes = MoldesController.Get();
        listaTipoDePecas = TPC.GetAll();
        listaTipoProdutos = TPRC.GetAll();
        ListaServicos = SC.GetAll();
    }

    public bool IsVisible(CabecalhosModelos cmodelos)
    {
        if (string.IsNullOrEmpty(Filter))
            return true;

        if (cmodelos.descricao.Contains(Filter) || cmodelos.idmodelo.ToString().Contains(Filter) || cmodelos.criadopor.ToString().Contains(Filter) || cmodelos.datacriacao.ToString().Contains(Filter))
            return true;

        return false;
    }

    public void OpenFichaModelo(string id)
    {
        cm = CMC.Get(id);
        dtp = TPRC.Get(cm.idtipoproduto.Value);
        dtdp = TPC.Get(cm.idtipodepeca.Value);
        listaModelos = MC.GetAllQuery(id);
        showModal = true;
    }
    void ModalShow()
    {
        showModal = true;
    }
    void ModalCancel()
    {
        showModal = false;
    }

    public async Task AtualizarLista()
    {

    }

    public async Task LoadData(string id, int linha)
    {

        m = listaModelos[linha - 1];

        js.InvokeVoidAsync("console.log", $"{m}");


        if(m.idmolde.HasValue)
        {
            mlds = MoldesController.Get(m.idmolde.Value);

        }
        else if(m.idservico.HasValue)
        {
            servicos = SC.Get(m.idservico.Value);
        }
        else if(m.idproduto != 0)
        {
            //mlds = .Get(m.idmolde.Value);
        }
        cl = colaboradoresController.Get(m.idcolaborador);

    }

    public async Task Apagar(string id)
    {
        bool confirmation;

        confirmation = await js.InvokeAsync<bool>("confirm", "Quer mesmo apagar?");

        if (confirmation)
        {
            string message = CMC.Delete(id);
            message += MC.Delete(id);
            OnInitializedAsync();
            Task.Delay(1000);
            {
                await js.InvokeVoidAsync("alert", @message);
            }
        }
    }

    public async Task Update()
    {

        CMC.Put(cm.idmodelo, cm);
        foreach (var modelos in listaModelos)
        {
        }    //
        showModal = false;
    }

    private async Task<IEnumerable<TipoDePeca>> ProcurarPecas(string searchText)
    {
        return await Task.FromResult(listaTipoDePecas.Where(h => h.codigo.ToLower().Contains(searchText.ToLower()) || h.descricao.ToLower().Contains(searchText.ToLower()) || h.idpeca.ToString().Contains(searchText.ToLower())).ToList());
    }

    private async Task<IEnumerable<Moldes>> ProcurarMoldes(string searchText)
    {
        return await Task.FromResult(listaMoldes.Where(h => h.codigo.ToLower().Contains(searchText.ToLower()) || h.descricao.ToLower().Contains(searchText.ToLower()) || h.idmolde.ToString().Contains(searchText.ToLower())).ToList());
    }

    private async Task<IEnumerable<Servicos>> ProcurarServicos(string searchText)
    {
        return await Task.FromResult(ListaServicos.Where(h => h.codigo.ToLower().Contains(searchText.ToLower()) || h.descricao.ToLower().Contains(searchText.ToLower())).ToList());
    }

    private async Task<IEnumerable<TipoProduto>> ProcurarProdutos(string searchText)
    {
        return await Task.FromResult(listaTipoProdutos.Where(h => h.codigo.ToLower().Contains(searchText.ToLower()) || h.descricao.ToLower().Contains(searchText.ToLower())).ToList());
    }

    private async Task<IEnumerable<Colaboradores>> ProcurarColaboradores(string searchText)
    {
        return await Task.FromResult(colaboradores.Where(h => h.codigo.ToLower().Contains(searchText.ToLower()) || h.descricao.ToLower().Contains(searchText.ToLower())).ToList());
    }

}
