@page "/vcompras"


<div class="container-fluid">

    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Lista de Produtos</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <div id="dataTable_wrapper" class="dataTables_wrapper dt-bootstrap4">
                    <div class="row"><div class="col-sm-12 col-md-6"><div class="dataTables_length" id="dataTable_length"><label>Show <select name="dataTable_length" aria-controls="dataTable" class="custom-select custom-select-sm form-control form-control-sm"><option value="10">10</option><option value="25">25</option><option value="50">50</option><option value="100">100</option></select> entries</label></div></div><div class="col-sm-12 col-md-6"><div id="dataTable_filter" class="dataTables_filter"><label>Search:<input type="search" class="form-control form-control-sm" placeholder="" aria-controls="dataTable"></label></div></div></div><div class="row">
                        <div class="col-sm-12">
                            <table class="table table-bordered dataTable" id="dataTable" width="100%" cellspacing="0" role="grid" aria-describedby="dataTable_info" style="width: 100%;">
                                <thead>
                                    <tr role="row"><th class="sorting_asc" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Name: activate to sort column descending" style="width: 101px;">IdProduto</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Position: activate to sort column ascending" style="width: 170px;">Produto</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Office: activate to sort column ascending" style="width: 71px;">Ref.Fornecedor</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Age: activate to sort column ascending" style="width: 31px;">Descrição</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Salary: activate to sort column ascending" style="width: 67px;">Data Criação</th><th class="sorting_asc" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Name: activate to sort column descending" style="width: 101px;">Ações</th></tr>
                                </thead>
                                <tfoot>
                                    <tr><th rowspan="1" colspan="1">IDFabrico</th><th rowspan="1" colspan="1">IDProduto</th><th rowspan="1" colspan="1">IDEncomenda</th><th rowspan="1" colspan="1">Data da Criação</th><th rowspan="1" colspan="1">Ações</th></tr>
                                </tfoot>
                                <tbody>
                                    @*@foreach (var compras in listaCompras)
                                    {
                                        if (!IsVisible(fabrico))
                                            continue;
                                    <tr @ondblclick="() => OpenFichaProduto(compras.idfatura)" style="height: 1em;">
                                        <td class="sorting_1" style=" overflow: hidden; white-space: nowrap; " title="@compras.idfatura">@compras.idfatura</td>
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@compras.idfornecedor">@compras.idfornecedor</td>
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@compras.numero">@compras.numero</td>
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@compras.preco">@compras.preco</td>
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@compras.datacriacao">@compras.datacriacao</td>
                                        <td><button class="btn btn-primary btn-sm" @onclick="() => OpenFichaProduto(compras.idproduto)" style="margin-left: 1rem">Editar</button><button class="btn btn-danger btn-sm" @onclick="() => Apagar(compras.idproduto)" style="margin-left: 0.3rem">Apagar</button></td>

                                    </tr>
                                    }*@
                                </tbody>
                            </table>
                        </div>
                    </div><div class="row"><div class="col-sm-12 col-md-5"><div class="dataTables_info" id="dataTable_info" role="status" aria-live="polite">Showing 1 to 10 of 57 entries</div></div><div class="col-sm-12 col-md-7"><div class="dataTables_paginate paging_simple_numbers" id="dataTable_paginate"><ul class="pagination"><li class="paginate_button page-item previous disabled" id="dataTable_previous"><a href="#" aria-controls="dataTable" data-dt-idx="0" tabindex="0" class="page-link">Previous</a></li><li class="paginate_button page-item active"><a href="#" aria-controls="dataTable" data-dt-idx="1" tabindex="0" class="page-link">1</a></li><li class="paginate_button page-item "><a href="#" aria-controls="dataTable" data-dt-idx="2" tabindex="0" class="page-link">2</a></li><li class="paginate_button page-item "><a href="#" aria-controls="dataTable" data-dt-idx="3" tabindex="0" class="page-link">3</a></li><li class="paginate_button page-item "><a href="#" aria-controls="dataTable" data-dt-idx="4" tabindex="0" class="page-link">4</a></li><li class="paginate_button page-item "><a href="#" aria-controls="dataTable" data-dt-idx="5" tabindex="0" class="page-link">5</a></li><li class="paginate_button page-item "><a href="#" aria-controls="dataTable" data-dt-idx="6" tabindex="0" class="page-link">6</a></li><li class="paginate_button page-item next" id="dataTable_next"><a href="#" aria-controls="dataTable" data-dt-idx="7" tabindex="0" class="page-link">Next</a></li></ul></div></div></div>
                </div>
            </div>
        </div>
    </div>

</div>

@code {
    Data.CabecalhoProdutos CCP = new CabecalhoProdutos();
    Data.Colaboradores cl = new Colaboradores();
    Data.Fornecedores fornecedores = new Data.Fornecedores();

    List<Fornecedores> listaFornecedores = new List<Fornecedores>();
    List<CabecalhoProdutos> listaCabecalhoProdutos = new List<CabecalhoProdutos>();
    List<Colaboradores> colaboradores = new List<Colaboradores>();
    List<CabecalhoCompras> listaCompras = new List<CabecalhoCompras>();

    //For input values
    List<Data.Produtos> LCP = new List<Produtos>();

    bool FichaModelo = false;

    bool showModal = false;
    bool Readonly = true;
    bool ReadonlyCabecalho = true;
    int i;
    string formadepesquisa;
    public string Filter { get; set; }


    protected override async Task OnInitializedAsync()
    {
        //listaCabecalhoFabrico = CFC.GetAll();

    }

    public bool IsVisible(CabecalhoCompras compras)
    {
        if (string.IsNullOrEmpty(Filter))
            return true;

        if (compras.apontamentos.Equals(Filter) || compras.idcompra.ToString().Contains(Filter) || compras.idfornecedor.ToString().Contains(Filter))
            return true;

        return false;
    }

    public void OpenFichaProduto(int id)
    {
        ////cm = CMC.Get(id);
        //dtp = TPRC.Get(cm.idtipoproduto.Value);
        //dtdp = TPC.Get(cm.idtipodepeca.Value);
        ////listaModelos = MC.GetAllQuery(id);
        //showModal = true;
    }
    void ModalShow()
    {
        showModal = true;
    }
    void ModalCancel()
    {
        showModal = false;
    }


    public async Task LoadData(int linha)
    {

        //m = listaProdutos[linha - 1];

        //js.InvokeVoidAsync("console.log", $"{m}");


        //if (m.idmolde.HasValue)
        //{
        //    mlds = MoldesController.Get(m.idmolde.Value);

        //}
        //else if (m.idservico.HasValue)
        //{
        //    servicos = SC.Get(m.idservico.Value);
        //}
        //else if (m.idproduto != 0)
        //{
        //    //mlds = .Get(m.idmolde.Value);
        //}
        //cl = colaboradoresController.Get(m.idcolaborador);

    }

    public async Task Apagar(int id)
    {
        //bool confirmation;

        //confirmation = await js.InvokeAsync<bool>("confirm", "Quer mesmo apagar?");

        //if (confirmation)
        //{
        //    string message = CMC.Delete(id);
        //    message += MC.Delete(id);
        //    OnInitializedAsync();
        //    Task.Delay(1000);
        //    {
        //        await js.InvokeVoidAsync("alert", @message);
        //    }
        //}
    }

    public async Task Update()
    {

        //CMC.Put(cm.idmodelo, cm);
        //foreach (var modelos in listaModelos)
        //{
        //}
        //showModal = false;
    }

    private async Task<IEnumerable<CabecalhoProdutos>> ProcurarProdutos(string searchText)
    {
        return await Task.FromResult(listaCabecalhoProdutos.Where(h => h.idproduto.ToString().Contains(searchText.ToLower()) || h.descricao.ToLower().Contains(searchText.ToLower())).ToList());
    }

    private async Task<IEnumerable<Colaboradores>> ProcurarColaboradores(string searchText)
    {
        return await Task.FromResult(colaboradores.Where(h => h.codigo.ToLower().Contains(searchText.ToLower()) || h.descricao.ToLower().Contains(searchText.ToLower())).ToList());
    }

}
