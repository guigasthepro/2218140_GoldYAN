@page "/hstock"
@attribute [Authorize]


<div class="container-fluid">

    <!--<p class="mb-4">DataTables is a third party plugin that is used to generate the demo table below. For more information about DataTables, please visit the <a target="_blank" href="https://datatables.net">official DataTables documentation</a>.</p>!-->
    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Movimento de Stock</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive-sm">
                <div id="dataTable_wrapper" class="dataTables_wrapper dt-bootstrap4">
                    <div class="row"><div class="col-sm-12 col-md-6"><div class="dataTables_length" id="dataTable_length"><label>Show <select name="dataTable_length" aria-controls="dataTable" class="custom-select custom-select-sm form-control form-control-sm"><option value="10">10</option><option value="25">25</option><option value="50">50</option><option value="100">100</option></select> entries</label></div></div><div class="col-sm-12 col-md-6"><div id="dataTable_filter" class="dataTables_filter"><label>Pesquisar Movimento:<input type="search" @bind="Filter" @bind:event="oninput" class="form-control form-control-sm" placeholder="" aria-controls="dataTable"></label></div></div></div><div class="row">
                        <div class="col-sm-12">
                            <table class="table table-bordered table-hover table-sm dataTable" id="dataTable" width="100%" cellspacing="0" role="grid" aria-describedby="dataTable_info" style="width: 100%;">
                                <thead>
                                <tr role="row"><th class="sorting_asc" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Name: activate to sort column descending" style="width: 101px;">Tipo de Componente</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Position: activate to sort column ascending" style="width: 170px;">IDComponente</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Office: activate to sort column ascending" style="width: 71px;">IDProdutoAlterado</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Age: activate to sort column ascending" style="width: 31px;">Tipo</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Start date: activate to sort column ascending" style="width: 68px;">Stock Inicial</th><th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Salary: activate to sort column ascending" style="width: 67px;">Stock Final</th></tr>
                                </thead>
                                <tfoot>
                                <tr><th rowspan="1" colspan="1">Tipo de Componente</th><th rowspan="1" colspan="1">IDComponente</th><th rowspan="1" colspan="1">Produto Alterado</th><th rowspan="1" colspan="1">Tipo</th><th rowspan="1" colspan="1">Stock Inicial</th><th rowspan="1" colspan="1">Stock Final</th></tr>
                                </tfoot>
                                <tbody>
                                @foreach (var stock in vhStock)
                                {
                                    if (!IsVisible(stock))
                                        continue;
                                    if (stock.tipo == "Entrada")
                                    {
                                        Entrada += stock.stockadicionado;
                                    }
                                    else
                                    {
                                        Saida += stock.stockadicionado;
                                    }
                                    <tr style="height: 1em;">
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@stock.tipocomponente">@stock.tipocomponente</td>
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@stock.idcomponente">@stock.idcomponente</td>
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@stock.idprodutoalterado">@stock.idprodutoalterado</td>
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@stock.tipo">@stock.tipo</td>
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@stock.stockinicial">@stock.stockinicial</td>
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@stock.stockadicionado">@stock.stockadicionado</td>
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@stock.stockfinal">@Math.Round(stock.stockfinal.Value, 2)</td>
                                        <td style=" overflow: hidden; white-space: nowrap; " title="@stock.stockinicial">@stock.datacriacao</td>

                                    </tr>



                                }
                                
                                </tbody>
                            </table>
                            @CheckStock()
                            <label>Entrada</label>
                            <input value="@Entrada" />
                            <label>Saida</label>
                            <input value="@Saida" />
                            <label>Stock</label>
                            <input value="@Stock" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    List<HistoricoStock> vhStock = new List<HistoricoStock>();
    public string Filter { get; set; }
    public double Entrada { get; set; }
    public double Saida { get; set; }
    public double Stock { get; set; }


    protected override async Task OnInitializedAsync()
    {
        vhStock = hStockC.GetAll();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Stock = Entrada - Saida;
        }
    }

    public async Task CheckStock()
    {
        Stock = Entrada - Saida;
    }

    public bool IsVisible(HistoricoStock hstock)
    {
        if (string.IsNullOrEmpty(Filter))
            return true;

        if (hstock.id.Equals(Filter) || hstock.idprodutoalterado.ToString().Contains(Filter) || hstock.tipo.ToString().Contains(Filter))
            return true;

        return false;
    }


}
